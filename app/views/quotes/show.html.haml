= title truncate(@quote.content, length: 70)
= description "#{@quote.content} - #{@quote.author_name} #{@quote.source}"

#quote.quote.well
  %blockquote
    .quote_body{class: @quote.language}
      = simple_format(@quote.content)
    .meta_info
      = link_to @quote.author_name, @quote.author if @quote.author
      - if @quote.source?
        %cite
          &mdash;《
          = auto_link(@quote.source, html: { target: '_blank'}) { |text| truncate(text, length: 30) }
          》
  .context
    = @quote.context
  .quote_photo
    - @quote.photos.each do |photo|
      = image_tag photo.file_url, class: 'img-polaroid', alt: 'quote photo'

  .uploader
    = t('.uploaded_by', user_name: link_to(@quote.user.name, @quote.user), time: time_ago_in_words(@quote.created_at)).html_safe
    - if @quote.language
      = t('.in_language', language: link_to(@quote.language_in_its_own, language_path(@quote.language))).html_safe

  .vote{id: dom_id(@quote, :voting)}
    = render "votes/vote", quote: @quote

- if @quote.user == current_user
  .form-actions.well
    = link_to t('.edit'), edit_quote_path(@quote), :class => 'btn'
    = link_to t('.destroy'), quote_path(@quote), :method => "delete", :data => { :confirm => 'Are you sure?' }, :class => 'btn btn-danger'

#quote_comments.comment_container.well
  %h3= t('common.comment_header')
  - if signed_in?
    = render 'comments/form', quote: @quote
  - else
    = t '.need_login_html', login: link_to(t('global.login'), login_path)

  %h4#comments_count
    = pluralize(@quote.comments_count, 'comment')
  %ul.comments
    = render(@quote.comments)
  - if @quote.comments_count == 0
    .no_records
      = t('.no_comment')
